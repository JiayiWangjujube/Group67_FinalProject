/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Customer;

import Business.Enterprise.Enterprise;
import Business.Organization.OrganizationDirectory;
import Business.Organization.TicketingOperationsOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yutingbai
 */
public class BuyTicketJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount customer;
    private static List<Object[]> checkedOutItems = new ArrayList<>();



    public BuyTicketJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount customer) {
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.customer = customer;
        initComponents();
        setupComponents();
    }

    public static void addCheckedOutItem(Object[] item) {
    checkedOutItems.add(item);
}

public static List<Object[]> getCheckedOutItems() {
    return checkedOutItems;
}
    private void setupComponents() {
    // 初始化类型下拉框
    cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Concert", "Movie", "Theater"}));
    
    // 添加监听事件，当用户选择类型时更新表格
    cmbType.addActionListener(evt -> updateTableByType());
}

// 初始化表格假数据
private void updateTableByType() {
    String selectedType = (String) cmbType.getSelectedItem();
    DefaultTableModel model = (DefaultTableModel) tblTicketCatalog.getModel();
    
    // 清空表格
    model.setRowCount(0);
    
    // 根据类型填充假数据
    if ("Concert".equals(selectedType)) {
        model.addRow(new Object[]{"Coldplay Live", 150, "Available"});
        model.addRow(new Object[]{"Rock Festival", 100, "Available"});
    } else if ("Movie".equals(selectedType)) {
        model.addRow(new Object[]{"Inception", 10, "Available"});
        model.addRow(new Object[]{"Interstellar", 12, "Sold Out"});
    } else if ("Theater".equals(selectedType)) {
        model.addRow(new Object[]{"Hamilton", 200, "Available"});
        model.addRow(new Object[]{"Phantom of the Opera", 180, "Available"});
    }
}
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQuantity = new javax.swing.JLabel();
        btnCheckOut = new javax.swing.JButton();
        spnQuantity = new javax.swing.JSpinner();
        lblType = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        lblCatalog = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTicketCatalog = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        lblQuantity.setText("Quantity:");

        btnCheckOut.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCheckOut.setText("Check out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lblType.setText("Type:");

        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        lblCatalog.setText("Catalog:");

        tblTicketCatalog.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblTicketCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTicketCatalog);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblQuantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addGap(114, 114, 114)
                .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 211, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCatalog)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(33, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(backJButton)))
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(221, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(49, 49, 49)
                    .addComponent(lblCatalog)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(233, 233, 233)
                    .addComponent(btnCheckOut)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
int selectedRow = tblTicketCatalog.getSelectedRow();
    if (selectedRow < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select an item to check out.");
        return;
    }

    int quantity = (int) spnQuantity.getValue();
    if (quantity <= 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Quantity must be greater than 0.");
        return;
    }

    String name = (String) tblTicketCatalog.getValueAt(selectedRow, 0);
    double price = ((Number) tblTicketCatalog.getValueAt(selectedRow, 1)).doubleValue();

    // 添加到已结算列表
    Object[] checkedOutItem = {name, price, quantity, price * quantity};
    BuyTicketJPanel.addCheckedOutItem(checkedOutItem);

    javax.swing.JOptionPane.showMessageDialog(this, 
        "Added " + quantity + " of " + name + " to your list.");

    
        

    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCatalog;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblType;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTable tblTicketCatalog;
    // End of variables declaration//GEN-END:variables

//private void populateCatalogTable() {
//    DefaultTableModel model = (DefaultTableModel) tblTicketCatalog.getModel(); // 假设表格变量为 catalogTable
//    model.setRowCount(0); // 清空表格
//
//    // 示例数据
//    Object[][] data = {
//        {"Item 1", 10.0, 100},
//        {"Item 2", 20.0, 50},
//        {"Item 3", 15.5, 30}
//    };
//
//    for (Object[] row : data) {
//        model.addRow(row);
//    }
//}
}
