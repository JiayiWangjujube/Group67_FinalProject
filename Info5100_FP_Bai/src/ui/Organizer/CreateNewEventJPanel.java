/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Organizer;

import Business.Role.OrganizerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.HeadlessException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Model.Event;


/**
 *
 * @author zhangdi
 */
public class CreateNewEventJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    OrganizerRole organizerRole;
    UserAccount useraccount;

    /**
     * Creates new form CreateNewEventJPanel
     */
    public CreateNewEventJPanel(JPanel upc, UserAccount ua) {
        initComponents();
        userProcessContainer = upc;
        useraccount=ua;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        txtEventDate = new javax.swing.JTextField();
        txtEventTime = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtVenue = new javax.swing.JTextField();
        txtMaxCapacity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEventDescr = new javax.swing.JTextField();

        jRadioButton1.setText("jRadioButton1");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel1.setText("Create New Event");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Event Name:");

        jLabel3.setText("Event Date:");

        jLabel4.setText("Event Time:");

        jLabel6.setText("Ticket Price:");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel7.setText("Maximum Capacity:");

        jLabel8.setText("Venue:");

        jLabel9.setText("Event Description:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaxCapacity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVenue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEventDate, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEventName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEventTime, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPrice)
                                .addComponent(txtEventDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(208, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(303, 303, 303))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEventTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEventDescr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(39, 39, 39)
                .addComponent(btnCreate)
                .addContainerGap(88, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();

        Component[] components = userProcessContainer.getComponents();
        for (Component c : components) {
            if (c instanceof EventManagementJPanel panel) {
                panel.refreshTable();
            }
        }

        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
  
        try {
            // 从文本框获取用户输入
            String eventName = txtEventName.getText();
            String eventDate = txtEventDate.getText();
            String eventTime = txtEventTime.getText();
            String eventDescription = txtEventDescr.getText();
            String venue = txtVenue.getText();
            double ticketPrice = 0.0;
            int capacity = 0;
            

            // 验证票价和容量格式
            try {
                ticketPrice = Double.parseDouble(txtPrice.getText());
                capacity = Integer.parseInt(txtMaxCapacity.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please check the ticket price and capacity formats.", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // 验证日期格式 (yyyy-MM-dd)
            if (!isValidDateFormat(eventDate, "yyyy-MM-dd")) {
                JOptionPane.showMessageDialog(this, "Invalid date format! Please use yyyy-MM-dd.", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // 验证时间格式 (HH:mm)
            if (!isValidTimeFormat(eventTime, "HH:mm")) {
                JOptionPane.showMessageDialog(this, "Invalid time format! Please use HH:mm (24-hour format).", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // 获取当前的 OrganizerRole
//            OrganizerRole organizerRole = (OrganizerRole) currentUser.getRole(); // 假设 currentUser 是当前登录用户
//            if (organizerRole == null) {
//                JOptionPane.showMessageDialog(this, "Error: Current user is not an organizer.", "Error", JOptionPane.ERROR_MESSAGE);
//                return;
//            }

            // 创建新事件并设置属性
            Event newEvent = organizerRole.createEvent(eventName, eventDate, eventTime, eventDescription, ticketPrice, venue, "Upcoming");
           
            // 提示用户添加成功
            JOptionPane.showMessageDialog(this, "Event added successfully!", "Info", JOptionPane.INFORMATION_MESSAGE);

            // 清空文本框内容
            txtEventName.setText("");
            txtEventDate.setText("");
            txtEventTime.setText("");
            txtEventDescr.setText("");
            txtPrice.setText("");
            txtMaxCapacity.setText("");
            txtVenue.setText("");
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: Unable to add event. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
      
    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTextField txtEventDate;
    private javax.swing.JTextField txtEventDescr;
    private javax.swing.JTextField txtEventName;
    private javax.swing.JTextField txtEventTime;
    private javax.swing.JTextField txtMaxCapacity;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtVenue;
    // End of variables declaration//GEN-END:variables


    private boolean isValidDateFormat(String date, String format) {
        SimpleDateFormat sdf = new SimpleDateFormat(format);
        sdf.setLenient(false); // 严格模式，避免不合法日期通过
        try {
            sdf.parse(date); // 尝试解析日期
            return true; // 如果解析成功，说明格式正确
        } catch (ParseException e) {
            return false; // 如果解析失败，说明格式错误
        }
    }

    private boolean isValidTimeFormat(String time, String format) {
        SimpleDateFormat sdf = new SimpleDateFormat(format);
        sdf.setLenient(false); // 严格模式，避免不合法时间通过
        try {
            sdf.parse(time); // 尝试解析时间
            return true; // 如果解析成功，说明格式正确
        } catch (ParseException e) {
            return false; // 如果解析失败，说明格式错误
        }
    }
}
